# Nginx configuration for AI Developer Portfolio
# Static file serving with SSL (assuming existing SSL setup)

server {
    listen 80;
    server_name peterbot.dev www.peterbot.dev;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name peterbot.dev www.peterbot.dev;
    
    # SSL Configuration (using existing certificates)
    ssl_certificate /etc/letsencrypt/live/peterbot.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/peterbot.dev/privkey.pem;
    
    # SSL Security Headers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Document root - adjust path to your portfolio location
    root /var/www/portfolio;
    index index.html;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; font-src 'self' https://fonts.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; img-src 'self' data: https:;" always;
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }
    }
    
    # CSS and JavaScript files with versioning support
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Enable compression
        gzip_static on;
    }
    
    # Image optimization and caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Optional: serve WebP if available
        location ~* \.(jpg|jpeg|png)$ {
            add_header Vary Accept;
            try_files $uri$webp_suffix $uri =404;
        }
    }
    
    # Font files
    location ~* \.(woff|woff2|eot|ttf|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
    
    # PDF files (CV)
    location ~* \.pdf$ {
        expires 1w;
        add_header Cache-Control "public";
        add_header Content-Disposition "inline";
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ ~$ {
        deny all;
    }
    
    location ~* \.(env|log|md)$ {
        deny all;
    }
    
    # Optional: Basic rate limiting for contact form
    location /contact {
        limit_req zone=contact burst=5 nodelay;
        try_files $uri $uri/ /index.html;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}

# Rate limiting zones (add to http block in main nginx.conf if needed)
# limit_req_zone $binary_remote_addr zone=contact:10m rate=5r/m;